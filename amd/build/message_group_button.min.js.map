{"version":3,"file":"message_group_button.min.js","sources":["../src/message_group_button.js"],"sourcesContent":["// Put this file in path/to/plugin/amd/src\n// You can call it anything you like\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport CustomEvents from 'core/custom_interaction_events';\nimport MessageDrawerHelper from 'core_message/message_drawer_helper';\n\nexport const init = () => {\n    window.console.log('we have been started');\n};\n\nvar SELECTORS = {\n    MESSAGE_TEXTAREA: '[data-region=\"send-message-txt\"]',\n    MESSAGE_USER_BUTTON: '#message-group-button',\n    MESSAGE_JUMP: '[data-region=\"jumpto\"]'\n};\n\nvar TEMPLATES = {\n    CONTENT: 'core_message/message_jumpto'\n};\n\n/**\n * Returns the conversation id, 0 if none.\n *\n * @param {object} element jQuery object for the button\n * @return {int}\n */\nvar getConversationId = function(element) {\n    return parseInt(element.attr('data-conversationid'));\n};\n\n/**\n * Handles opening the messaging drawer to send a\n * message to a given user.\n *\n * @method enhance\n * @param {object} element jQuery object for the button\n */\nexport const send = (element) => {\n    window.console.log(element);\n    element = $(element);\n\n    var args = {\n        conversationid: getConversationId(element),\n        buttonid: $(element).attr('id'),\n    };\n    window.console.log(element);\n    window.console.log(args);\n\n    Templates.render(TEMPLATES.CONTENT, {})\n        .then(function(html) {\n            element.after(html);\n        })\n        .then(function() {\n            $(SELECTORS.MESSAGE_USER_BUTTON).next().focus(function() {\n                $(SELECTORS.MESSAGE_TEXTAREA).focus();\n            });\n        });\n\n    CustomEvents.define(element, [CustomEvents.events.activate]);\n    element.on(CustomEvents.events.activate, function(e, data) {\n        if ($(e.target).hasClass('active')) {\n            MessageDrawerHelper.hide();\n            $(SELECTORS.MESSAGE_USER_BUTTON).next().attr('tabindex', -1);\n        } else {\n            $(SELECTORS.MESSAGE_USER_BUTTON).next().attr('tabindex', 0);\n            if (args.conversationid) {\n                MessageDrawerHelper.showConversation(args);\n            } else {\n                window.console.warn(\"Group conversation does not exist\");\n            }\n        }\n        $(e.target).focus();\n        $(e.target).toggleClass('active');\n        e.preventDefault();\n        data.originalEvent.preventDefault();\n    });\n    window.console.log(\"mod_grouptool: Send was executed\");\n};"],"names":["window","console","log","SELECTORS","TEMPLATES","getConversationId","element","parseInt","attr","args","conversationid","buttonid","render","then","html","after","next","focus","define","CustomEvents","events","activate","on","e","data","target","hasClass","hide","showConversation","warn","toggleClass","preventDefault","originalEvent"],"mappings":"spBAQoB,KAChBA,OAAOC,QAAQC,IAAI,6BAGnBC,2BACkB,mCADlBA,8BAEqB,wBAIrBC,kBACS,8BASTC,kBAAoB,SAASC,gBACtBC,SAASD,QAAQE,KAAK,uCAUZF,UACjBN,OAAOC,QAAQC,IAAII,SACnBA,SAAU,mBAAEA,aAERG,KAAO,CACPC,eAAgBL,kBAAkBC,SAClCK,UAAU,mBAAEL,SAASE,KAAK,OAE9BR,OAAOC,QAAQC,IAAII,SACnBN,OAAOC,QAAQC,IAAIO,yBAETG,OAAOR,kBAAmB,IAC/BS,MAAK,SAASC,MACXR,QAAQS,MAAMD,SAEjBD,MAAK,+BACAV,+BAA+Ba,OAAOC,OAAM,+BACxCd,4BAA4Bc,iDAI7BC,OAAOZ,QAAS,CAACa,mCAAaC,OAAOC,WAClDf,QAAQgB,GAAGH,mCAAaC,OAAOC,UAAU,SAASE,EAAGC,OAC7C,mBAAED,EAAEE,QAAQC,SAAS,0CACDC,2BAClBxB,+BAA+Ba,OAAOR,KAAK,YAAa,yBAExDL,+BAA+Ba,OAAOR,KAAK,WAAY,GACrDC,KAAKC,8CACekB,iBAAiBnB,MAErCT,OAAOC,QAAQ4B,KAAK,0DAG1BN,EAAEE,QAAQR,4BACVM,EAAEE,QAAQK,YAAY,UACxBP,EAAEQ,iBACFP,KAAKQ,cAAcD,oBAEvB/B,OAAOC,QAAQC,IAAI"}